// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: polypb/v1/polypb.proto

package polypbv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CompressMethod int32

const (
	CompressMethod_COMPRESS_METHOD_UNSPECIFIED CompressMethod = 0
	CompressMethod_COMPRESS_METHOD_POLYLINE    CompressMethod = 1 // https://developers.google.com/maps/documentation/utilities/polylinealgorithm
)

// Enum value maps for CompressMethod.
var (
	CompressMethod_name = map[int32]string{
		0: "COMPRESS_METHOD_UNSPECIFIED",
		1: "COMPRESS_METHOD_POLYLINE",
	}
	CompressMethod_value = map[string]int32{
		"COMPRESS_METHOD_UNSPECIFIED": 0,
		"COMPRESS_METHOD_POLYLINE":    1,
	}
)

func (x CompressMethod) Enum() *CompressMethod {
	p := new(CompressMethod)
	*p = x
	return p
}

func (x CompressMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompressMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_polypb_v1_polypb_proto_enumTypes[0].Descriptor()
}

func (CompressMethod) Type() protoreflect.EnumType {
	return &file_polypb_v1_polypb_proto_enumTypes[0]
}

func (x CompressMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompressMethod.Descriptor instead.
func (CompressMethod) EnumDescriptor() ([]byte, []int) {
	return file_polypb_v1_polypb_proto_rawDescGZIP(), []int{0}
}

// Basic Point data define.
type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lng float32 `protobuf:"fixed32,1,opt,name=lng,proto3" json:"lng,omitempty"`
	Lat float32 `protobuf:"fixed32,2,opt,name=lat,proto3" json:"lat,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polypb_v1_polypb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_polypb_v1_polypb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_polypb_v1_polypb_proto_rawDescGZIP(), []int{0}
}

func (x *Point) GetLng() float32 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *Point) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

// Define a polygon, mostly based on GeoJSON's Polygon define.
//
// Excerpt from RFC-9476 section 'Polygon'
//
//   - A linear ring is a closed LineString with four or more positions.
//
//   - The first and last positions are equivalent, and they MUST contain
//     identical values; their representation SHOULD also be identical.
//
//   - A linear ring is the boundary of a surface or the boundary of a
//     hole in a surface.
//
//   - A linear ring MUST follow the right-hand rule with respect to the
//     area it bounds, i.e., exterior rings are counterclockwise, and
//     holes are clockwise.
//
//     Note: the [GJ2008] specification did not discuss linear ring winding
//     order.  For backwards compatibility, parsers SHOULD NOT reject
//     Polygons that do not follow the right-hand rule.
//
//     Though a linear ring is not explicitly represented as a GeoJSON
//     geometry type, it leads to a canonical formulation of the Polygon
//     geometry type definition as follows:
//
//   - For type "Polygon", the "coordinates" member MUST be an array of
//     linear ring coordinate arrays.
//
//   - For Polygons with more than one of these rings, the first MUST be
//     the exterior ring, and any others MUST be interior rings.  The
//     exterior ring bounds the surface, and the interior rings (if
//     present) bound holes within the surface.
//
// [GJ2008]: https://geojson.org/geojson-spec
type Polygon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Points []*Point   `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"` // define the "exterior ring"
	Holes  []*Polygon `protobuf:"bytes,2,rep,name=holes,proto3" json:"holes,omitempty"`   // define the "interior rings" as holes
}

func (x *Polygon) Reset() {
	*x = Polygon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polypb_v1_polypb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Polygon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Polygon) ProtoMessage() {}

func (x *Polygon) ProtoReflect() protoreflect.Message {
	mi := &file_polypb_v1_polypb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Polygon.ProtoReflect.Descriptor instead.
func (*Polygon) Descriptor() ([]byte, []int) {
	return file_polypb_v1_polypb_proto_rawDescGZIP(), []int{1}
}

func (x *Polygon) GetPoints() []*Point {
	if x != nil {
		return x.Points
	}
	return nil
}

func (x *Polygon) GetHoles() []*Polygon {
	if x != nil {
		return x.Holes
	}
	return nil
}

type Shape struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Polygons []*Polygon `protobuf:"bytes,1,rep,name=polygons,proto3" json:"polygons,omitempty"` // As multi-polygon
	Data     []byte     `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`         // Data for the polygon
}

func (x *Shape) Reset() {
	*x = Shape{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polypb_v1_polypb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shape) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shape) ProtoMessage() {}

func (x *Shape) ProtoReflect() protoreflect.Message {
	mi := &file_polypb_v1_polypb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shape.ProtoReflect.Descriptor instead.
func (*Shape) Descriptor() ([]byte, []int) {
	return file_polypb_v1_polypb_proto_rawDescGZIP(), []int{2}
}

func (x *Shape) GetPolygons() []*Polygon {
	if x != nil {
		return x.Polygons
	}
	return nil
}

func (x *Shape) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Shapes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shapes  []*Shape `protobuf:"bytes,1,rep,name=shapes,proto3" json:"shapes,omitempty"`
	Version int32    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Shapes) Reset() {
	*x = Shapes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polypb_v1_polypb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shapes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shapes) ProtoMessage() {}

func (x *Shapes) ProtoReflect() protoreflect.Message {
	mi := &file_polypb_v1_polypb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shapes.ProtoReflect.Descriptor instead.
func (*Shapes) Descriptor() ([]byte, []int) {
	return file_polypb_v1_polypb_proto_rawDescGZIP(), []int{3}
}

func (x *Shapes) GetShapes() []*Shape {
	if x != nil {
		return x.Shapes
	}
	return nil
}

func (x *Shapes) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type CompressedPolygon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Points []byte               `protobuf:"bytes,1,opt,name=points,proto3" json:"points,omitempty"`
	Holes  []*CompressedPolygon `protobuf:"bytes,2,rep,name=holes,proto3" json:"holes,omitempty"`
}

func (x *CompressedPolygon) Reset() {
	*x = CompressedPolygon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polypb_v1_polypb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompressedPolygon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompressedPolygon) ProtoMessage() {}

func (x *CompressedPolygon) ProtoReflect() protoreflect.Message {
	mi := &file_polypb_v1_polypb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompressedPolygon.ProtoReflect.Descriptor instead.
func (*CompressedPolygon) Descriptor() ([]byte, []int) {
	return file_polypb_v1_polypb_proto_rawDescGZIP(), []int{4}
}

func (x *CompressedPolygon) GetPoints() []byte {
	if x != nil {
		return x.Points
	}
	return nil
}

func (x *CompressedPolygon) GetHoles() []*CompressedPolygon {
	if x != nil {
		return x.Holes
	}
	return nil
}

// CompressedShape designed for binary file as small as possible.
type CompressedShape struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Polygons []*CompressedPolygon `protobuf:"bytes,1,rep,name=polygons,proto3" json:"polygons,omitempty"`
	Data     []byte               `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CompressedShape) Reset() {
	*x = CompressedShape{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polypb_v1_polypb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompressedShape) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompressedShape) ProtoMessage() {}

func (x *CompressedShape) ProtoReflect() protoreflect.Message {
	mi := &file_polypb_v1_polypb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompressedShape.ProtoReflect.Descriptor instead.
func (*CompressedShape) Descriptor() ([]byte, []int) {
	return file_polypb_v1_polypb_proto_rawDescGZIP(), []int{5}
}

func (x *CompressedShape) GetPolygons() []*CompressedPolygon {
	if x != nil {
		return x.Polygons
	}
	return nil
}

func (x *CompressedShape) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type CompressedShapes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method  CompressMethod     `protobuf:"varint,1,opt,name=method,proto3,enum=polypb.v1.CompressMethod" json:"method,omitempty"`
	Shapes  []*CompressedShape `protobuf:"bytes,2,rep,name=shapes,proto3" json:"shapes,omitempty"`
	Version string             `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *CompressedShapes) Reset() {
	*x = CompressedShapes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polypb_v1_polypb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompressedShapes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompressedShapes) ProtoMessage() {}

func (x *CompressedShapes) ProtoReflect() protoreflect.Message {
	mi := &file_polypb_v1_polypb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompressedShapes.ProtoReflect.Descriptor instead.
func (*CompressedShapes) Descriptor() ([]byte, []int) {
	return file_polypb_v1_polypb_proto_rawDescGZIP(), []int{6}
}

func (x *CompressedShapes) GetMethod() CompressMethod {
	if x != nil {
		return x.Method
	}
	return CompressMethod_COMPRESS_METHOD_UNSPECIFIED
}

func (x *CompressedShapes) GetShapes() []*CompressedShape {
	if x != nil {
		return x.Shapes
	}
	return nil
}

func (x *CompressedShapes) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// Preindex tile item.
//
// The X/Y/Z are OSM style like map tile index values.
type PreindexData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Z int32 `protobuf:"varint,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *PreindexData) Reset() {
	*x = PreindexData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polypb_v1_polypb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreindexData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreindexData) ProtoMessage() {}

func (x *PreindexData) ProtoReflect() protoreflect.Message {
	mi := &file_polypb_v1_polypb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreindexData.ProtoReflect.Descriptor instead.
func (*PreindexData) Descriptor() ([]byte, []int) {
	return file_polypb_v1_polypb_proto_rawDescGZIP(), []int{7}
}

func (x *PreindexData) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *PreindexData) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *PreindexData) GetZ() int32 {
	if x != nil {
		return x.Z
	}
	return 0
}

// PreindexShapes is all preindex for a polygon.
type PreindexShapes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string          `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	IdxZoom int32           `protobuf:"varint,2,opt,name=idx_zoom,json=idxZoom,proto3" json:"idx_zoom,omitempty"` // which zoom value the tiles generated
	AggZoom int32           `protobuf:"varint,3,opt,name=agg_zoom,json=aggZoom,proto3" json:"agg_zoom,omitempty"` // which zoom value the tiles merge up with.
	Keys    []*PreindexData `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty"`
	Data    []byte          `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PreindexShapes) Reset() {
	*x = PreindexShapes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polypb_v1_polypb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreindexShapes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreindexShapes) ProtoMessage() {}

func (x *PreindexShapes) ProtoReflect() protoreflect.Message {
	mi := &file_polypb_v1_polypb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreindexShapes.ProtoReflect.Descriptor instead.
func (*PreindexShapes) Descriptor() ([]byte, []int) {
	return file_polypb_v1_polypb_proto_rawDescGZIP(), []int{8}
}

func (x *PreindexShapes) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PreindexShapes) GetIdxZoom() int32 {
	if x != nil {
		return x.IdxZoom
	}
	return 0
}

func (x *PreindexShapes) GetAggZoom() int32 {
	if x != nil {
		return x.AggZoom
	}
	return 0
}

func (x *PreindexShapes) GetKeys() []*PreindexData {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *PreindexShapes) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_polypb_v1_polypb_proto protoreflect.FileDescriptor

var file_polypb_v1_polypb_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x79,
	0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x62,
	0x2e, 0x76, 0x31, 0x22, 0x2b, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x61, 0x74,
	0x22, 0x5d, 0x0a, 0x07, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x06, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x6f,
	0x6c, 0x79, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x05, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x52, 0x05, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x22,
	0x4b, 0x0a, 0x05, 0x53, 0x68, 0x61, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x79,
	0x67, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6f, 0x6c,
	0x79, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x52, 0x08,
	0x70, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4c, 0x0a, 0x06,
	0x53, 0x68, 0x61, 0x70, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x70, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x06, 0x73, 0x68, 0x61, 0x70, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5f, 0x0a, 0x11, 0x43, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x68, 0x6f, 0x6c, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x50, 0x6f, 0x6c,
	0x79, 0x67, 0x6f, 0x6e, 0x52, 0x05, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x5f, 0x0a, 0x0f, 0x43,
	0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x53, 0x68, 0x61, 0x70, 0x65, 0x12, 0x38,
	0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x52, 0x08,
	0x70, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x93, 0x01, 0x0a,
	0x10, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x53, 0x68, 0x61, 0x70, 0x65,
	0x73, 0x12, 0x31, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x70, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x53, 0x68, 0x61, 0x70, 0x65,
	0x52, 0x06, 0x73, 0x68, 0x61, 0x70, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x0c, 0x50, 0x72, 0x65, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78,
	0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x12, 0x0c,
	0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x7a, 0x22, 0xa1, 0x01, 0x0a,
	0x0e, 0x50, 0x72, 0x65, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x68, 0x61, 0x70, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x64, 0x78,
	0x5f, 0x7a, 0x6f, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x64, 0x78,
	0x5a, 0x6f, 0x6f, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x67, 0x5f, 0x7a, 0x6f, 0x6f, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x67, 0x67, 0x5a, 0x6f, 0x6f, 0x6d, 0x12,
	0x2b, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x70, 0x6f, 0x6c, 0x79, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x2a, 0x4f, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f, 0x4d, 0x50, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d,
	0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x4d, 0x50, 0x52, 0x45, 0x53, 0x53, 0x5f,
	0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x50, 0x4f, 0x4c, 0x59, 0x4c, 0x49, 0x4e, 0x45, 0x10,
	0x01, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x72, 0x69, 0x6e, 0x67, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x2f, 0x70, 0x6f, 0x6c, 0x79, 0x70,
	0x62, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x62, 0x2f,
	0x76, 0x31, 0x3b, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x62, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_polypb_v1_polypb_proto_rawDescOnce sync.Once
	file_polypb_v1_polypb_proto_rawDescData = file_polypb_v1_polypb_proto_rawDesc
)

func file_polypb_v1_polypb_proto_rawDescGZIP() []byte {
	file_polypb_v1_polypb_proto_rawDescOnce.Do(func() {
		file_polypb_v1_polypb_proto_rawDescData = protoimpl.X.CompressGZIP(file_polypb_v1_polypb_proto_rawDescData)
	})
	return file_polypb_v1_polypb_proto_rawDescData
}

var file_polypb_v1_polypb_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_polypb_v1_polypb_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_polypb_v1_polypb_proto_goTypes = []interface{}{
	(CompressMethod)(0),       // 0: polypb.v1.CompressMethod
	(*Point)(nil),             // 1: polypb.v1.Point
	(*Polygon)(nil),           // 2: polypb.v1.Polygon
	(*Shape)(nil),             // 3: polypb.v1.Shape
	(*Shapes)(nil),            // 4: polypb.v1.Shapes
	(*CompressedPolygon)(nil), // 5: polypb.v1.CompressedPolygon
	(*CompressedShape)(nil),   // 6: polypb.v1.CompressedShape
	(*CompressedShapes)(nil),  // 7: polypb.v1.CompressedShapes
	(*PreindexData)(nil),      // 8: polypb.v1.PreindexData
	(*PreindexShapes)(nil),    // 9: polypb.v1.PreindexShapes
}
var file_polypb_v1_polypb_proto_depIdxs = []int32{
	1, // 0: polypb.v1.Polygon.points:type_name -> polypb.v1.Point
	2, // 1: polypb.v1.Polygon.holes:type_name -> polypb.v1.Polygon
	2, // 2: polypb.v1.Shape.polygons:type_name -> polypb.v1.Polygon
	3, // 3: polypb.v1.Shapes.shapes:type_name -> polypb.v1.Shape
	5, // 4: polypb.v1.CompressedPolygon.holes:type_name -> polypb.v1.CompressedPolygon
	5, // 5: polypb.v1.CompressedShape.polygons:type_name -> polypb.v1.CompressedPolygon
	0, // 6: polypb.v1.CompressedShapes.method:type_name -> polypb.v1.CompressMethod
	6, // 7: polypb.v1.CompressedShapes.shapes:type_name -> polypb.v1.CompressedShape
	8, // 8: polypb.v1.PreindexShapes.keys:type_name -> polypb.v1.PreindexData
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_polypb_v1_polypb_proto_init() }
func file_polypb_v1_polypb_proto_init() {
	if File_polypb_v1_polypb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_polypb_v1_polypb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polypb_v1_polypb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Polygon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polypb_v1_polypb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shape); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polypb_v1_polypb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shapes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polypb_v1_polypb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompressedPolygon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polypb_v1_polypb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompressedShape); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polypb_v1_polypb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompressedShapes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polypb_v1_polypb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreindexData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polypb_v1_polypb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreindexShapes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_polypb_v1_polypb_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_polypb_v1_polypb_proto_goTypes,
		DependencyIndexes: file_polypb_v1_polypb_proto_depIdxs,
		EnumInfos:         file_polypb_v1_polypb_proto_enumTypes,
		MessageInfos:      file_polypb_v1_polypb_proto_msgTypes,
	}.Build()
	File_polypb_v1_polypb_proto = out.File
	file_polypb_v1_polypb_proto_rawDesc = nil
	file_polypb_v1_polypb_proto_goTypes = nil
	file_polypb_v1_polypb_proto_depIdxs = nil
}
